// Generated by CodiumAI

describe('getUsers', () => {});

// Test that the function 'getUsers' is asynchronous and returns a promise
it('should return a promise when called', () => {
  const result = getUsers();
  expect(result).toBeInstanceOf(Promise);
});

describe('saveUser', () => {});

// Test that the user input data is sanitized before saving
it('should sanitize user input data when saving', () => {
  // Test setup
  const req = {
    body: {
      username: '<script>alert("XSS")</script>',
      password: 'password123',
    },
  };
  const res = {
    status: jest.fn().mockReturnThis(),
    json: jest.fn(),
  };
  const next = jest.fn();

  // Call the function
  saveUser(req, res, next);

  // Assertions
  expect(prisma.user.create).toHaveBeenCalledTimes(1);
  expect(prisma.user.create).toHaveBeenCalledWith({
    data: {
      username: '&lt;script&gt;alert("XSS")&lt;/script&gt;',
      password: 'password123',
    },
  });
  expect(res.status).toHaveBeenCalledTimes(1);
  expect(res.status).toHaveBeenCalledWith(201);
  expect(res.json).toHaveBeenCalledTimes(1);
  expect(res.json).toHaveBeenCalledWith({
    user: {
      username: '&lt;script&gt;alert("XSS")&lt;/script&gt;',
      password: 'password123',
    },
  });
  expect(next).not.toHaveBeenCalled();
});
